"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[7499],{2308:e=>{e.exports=JSON.parse('{"label":"concepts","permalink":"/event-storm-documentation/docs/tags/concepts","allTagsPath":"/event-storm-documentation/docs/tags","count":6,"items":[{"id":"concepts/dx","title":"Developer experience","description":"","permalink":"/event-storm-documentation/docs/concepts/dx"},{"id":"concepts/api","title":"How the API is designed?","description":"The Event Storm library","permalink":"/event-storm-documentation/docs/concepts/api"},{"id":"concepts/optimizations","title":"Optimizating the run time","description":"","permalink":"/event-storm-documentation/docs/concepts/optimizations"},{"id":"concepts/performance","title":"Performance impact","description":"Performance (TODO:: state management ownership, Context.Provider)","permalink":"/event-storm-documentation/docs/concepts/performance"},{"id":"concepts/overview","title":"The bigger picture","description":"The Event Storm library is focused on providing a high performance in memory data store. Furthermore, focusing on performance, the Event Storm, also is providing a simple and already familiar API, to minimize the intergation cost.","permalink":"/event-storm-documentation/docs/concepts/overview"},{"id":"concepts/subscription","title":"What is a subscription?","description":"Generally saying subscription is receiving some information(maybe something) over some agreement. According to the definition the act of subscription is based on particular subscription subject. Which basically means, that the owner of the subscription must receive an information, if and only if, the particular subject has been changed. Furthermore, the owner of the subject must not be even \\"disturbed\\", for any other reason.","permalink":"/event-storm-documentation/docs/concepts/subscription"}]}')}}]);