"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[2948],{3546:e=>{e.exports=JSON.parse('{"label":"bindings","permalink":"/event-storm-documentation/docs/tags/bindings","allTagsPath":"/event-storm-documentation/docs/tags","count":6,"items":[{"id":"bindings/react/overview","title":"Overview","description":"The React Event Storm is providing a lightweight, minimal abstraction for the Event Storm library.","permalink":"/event-storm-documentation/docs/bindings/react/overview"},{"id":"bindings/react/subscription","title":"Subscription types","description":"The event-storm is presenting 3 levels of subscription:","permalink":"/event-storm-documentation/docs/bindings/react/subscription"},{"id":"bindings/overview","title":"Supported bindings","description":"Event Storm needs a binding in order to work with a UI solution. In other words the renderer mechanism needs to be triggered on storm update.","permalink":"/event-storm-documentation/docs/bindings/overview"},{"id":"bindings/react/api-reference/usemodels","title":"useModels","description":"The Event Storm models also can be used with React components. useModels can receive a models array, subscribe to them and return their last states( in the same provided order).","permalink":"/event-storm-documentation/docs/bindings/react/api-reference/usemodels"},{"id":"bindings/react/api-reference/usepublish","title":"usePublish","description":"The publsh hook, is simply reexporting of the storm.publish method.","permalink":"/event-storm-documentation/docs/bindings/react/api-reference/usepublish"},{"id":"bindings/react/api-reference/usestorm","title":"useStorm","description":"The storm inside react components can be used with the help of useStorm hook. Example:","permalink":"/event-storm-documentation/docs/bindings/react/api-reference/usestorm"}]}')}}]);