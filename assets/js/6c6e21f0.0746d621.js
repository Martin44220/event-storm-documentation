"use strict";(self.webpackChunkevent_storm_documentation=self.webpackChunkevent_storm_documentation||[]).push([[927],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,v=d["".concat(c,".").concat(m)]||d[m]||p[m]||i;return n?r.createElement(v,a(a({ref:t},u),{},{components:n})):r.createElement(v,a({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1603:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const i={id:"bindings-overview",title:"React Event Storm",tags:["react","Event Storm","bindings"],sidebar_position:1},a=void 0,s={unversionedId:"bindings/react/bindings-overview",id:"bindings/react/bindings-overview",title:"React Event Storm",description:"The problem",source:"@site/docs/bindings/react/introduction.md",sourceDirName:"bindings/react",slug:"/bindings/react/bindings-overview",permalink:"/event-storm-documentation/docs/bindings/react/bindings-overview",draft:!1,editUrl:"https://github.com/event-storm/event-storm-documentation/tree/main/bindings/react/introduction.md",tags:[{label:"react",permalink:"/event-storm-documentation/docs/tags/react"},{label:"Event Storm",permalink:"/event-storm-documentation/docs/tags/event-storm"},{label:"bindings",permalink:"/event-storm-documentation/docs/tags/bindings"}],version:"current",sidebarPosition:1,frontMatter:{id:"bindings-overview",title:"React Event Storm",tags:["react","Event Storm","bindings"],sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"React Event Storm",permalink:"/event-storm-documentation/docs/category/react-event-storm"},next:{title:"API reference",permalink:"/event-storm-documentation/docs/category/api-reference-1"}},c={},l=[{value:"The problem",id:"the-problem",level:2},{value:"The Solution",id:"the-solution",level:2},{value:"Active Subscription",id:"active-subscription",level:4},{value:"Passive subscription",id:"passive-subscription",level:4},{value:"Condition-based subscription",id:"condition-based-subscription",level:4}],u={toc:l};function p(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"the-problem"},"The problem"),(0,o.kt)("p",null,"Imagine a react application. You have a component and it is subscribed to store. It is using ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"cards")," properties.\nThe ",(0,o.kt)("inlineCode",{parentName:"p"},"cards")," are used to render a list. Let's imagine you want to save in backend the provided ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")," for clicked ",(0,o.kt)("inlineCode",{parentName:"p"},"card"),". So, the ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")," information is used whenever you are clicking on a particular ",(0,o.kt)("inlineCode",{parentName:"p"},"card"),". In most store managers(e.g. Overmind, Redux) your component will be updated on ",(0,o.kt)("inlineCode",{parentName:"p"},"sizes")," change even if the user will never click to the list.\nTo avoid unnecassary renders, you'll need to directly access the store in your ",(0,o.kt)("inlineCode",{parentName:"p"},"card"),'\'s click event handler. Which is most probably not the solution you\'re looking for. With the workarround you\'ll get store usage in a "react-way" as usual, also in a "none react-way"(accessing the store diretly, not via ',(0,o.kt)("inlineCode",{parentName:"p"},"useStore")," or some other hook). Also, worth nothing that you'll have components where you need more than one handler. So you'll need to duplicate the code that accesses the store."),(0,o.kt)("h2",{id:"the-solution"},"The Solution"),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"event-storm")," is presenting 3 levels of subscription:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Active subscription"),(0,o.kt)("li",{parentName:"ul"},"Passive subscription"),(0,o.kt)("li",{parentName:"ul"},"Condition-based subscription")),(0,o.kt)("h4",{id:"active-subscription"},"Active Subscription"),(0,o.kt)("p",null,"  This is a regular subscription. Whenever you are using any key from the store like in the example below, you'll receive any update on that keys."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { cards, sizes } = useStore();\n")),(0,o.kt)("p",null,"This is the same as:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { cards, sizes } = useStore({ active: true });\n")),(0,o.kt)("h4",{id:"passive-subscription"},"Passive subscription"),(0,o.kt)("p",null,"This option allows you to access any store key without getting you component rerendered on the particular keys' updates. ",(0,o.kt)("strong",{parentName:"p"},"It is guaranteed that whenever you'll use the store values they'll be up to date(fresh values)"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const { cards, sizes } = useStore({ active: false });\n")),(0,o.kt)("h4",{id:"condition-based-subscription"},"Condition-based subscription"),(0,o.kt)("p",null,"What is a condition-based subscription? The updates on the keys will not update the component until the provided condition will be truthy.\nWhenever ",(0,o.kt)("inlineCode",{parentName:"p"},"active")," option can becomes ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," during runtime, the subcription becomes active. This means, starting from that point, your component\nwill be rerendered on the key's updates. ",(0,o.kt)("strong",{parentName:"p"},"With this feature, you are controlling your subscription.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const [counter, setCounter] = useState(0);\nconst condition = counter > 4;\nconst { cards, sizes } = useStore({ active: condition });\n\nif (condition) {\n  console.log(cards, sizes);\n  // other stuff related to 'cards' or 'sizes'\n}\n")),(0,o.kt)("p",null,"You can change the value of ",(0,o.kt)("inlineCode",{parentName:"p"},"active")," option from ",(0,o.kt)("inlineCode",{parentName:"p"},"true")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," or vise versa. Whenever it'll be ",(0,o.kt)("inlineCode",{parentName:"p"},"false")," your component will not be updated for the used keys' changes."))}p.isMDXComponent=!0}}]);